syntax="proto3";
package node;
option go_package = "github.com/dusk-protobuf/autogen/go/node";

import "wallet.proto";
import "mempool.proto";

message EmptyRequest {}

message GenericResponse {
	string response = 1;
}

service Auth {
    rpc CreateSession(SessionRequest) returns (Session) {};
	rpc DropSession(EmptyRequest) returns (GenericResponse) {};
}

service Wallet {
	rpc CreateWallet(CreateRequest) returns (LoadResponse) {};
	rpc LoadWallet(LoadRequest) returns (LoadResponse) {};
	rpc CreateFromSeed(CreateRequest) returns (LoadResponse) {};
	rpc ClearWalletDatabase(EmptyRequest) returns (GenericResponse) {};

	rpc GetWalletStatus(EmptyRequest) returns (WalletStatusResponse) {};
	rpc GetAddress(EmptyRequest) returns (LoadResponse) {};
	rpc GetBalance(EmptyRequest) returns (BalanceResponse) {};
	rpc GetTxHistory(EmptyRequest) returns (TxHistoryResponse) {};
}

service Mempool {
	rpc GetUnconfirmedBalance(GetUnconfirmedBalanceRequest) returns (BalanceResponse) {};
	rpc SelectTx(SelectRequest) returns (SelectResponse) {};
}

service Chain {
	rpc RebuildChain(EmptyRequest) returns (GenericResponse) {};
	rpc GetSyncProgress(EmptyRequest) returns (SyncProgressResponse) {};
}

service Transactor {
	rpc CallContract(CallContractRequest) returns (TransactionResponse) {};
	rpc Transfer(TransferRequest) returns (TransactionResponse) {};
	rpc Bid(BidRequest) returns (TransactionResponse) {};
	rpc Stake(StakeRequest) returns (TransactionResponse) {};
}

service Provisioner {
	rpc AutomateStakes(EmptyRequest) returns (GenericResponse) {};
}

service BlockGenerator {
	rpc AutomateBids(EmptyRequest) returns (GenericResponse) {};
}
