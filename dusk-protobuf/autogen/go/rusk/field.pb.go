// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: field.proto

package rusk

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Scalar struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scalar) Reset()         { *m = Scalar{} }
func (m *Scalar) String() string { return proto.CompactTextString(m) }
func (*Scalar) ProtoMessage()    {}
func (*Scalar) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{0}
}
func (m *Scalar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scalar.Unmarshal(m, b)
}
func (m *Scalar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scalar.Marshal(b, m, deterministic)
}
func (m *Scalar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scalar.Merge(m, src)
}
func (m *Scalar) XXX_Size() int {
	return xxx_messageInfo_Scalar.Size(m)
}
func (m *Scalar) XXX_DiscardUnknown() {
	xxx_messageInfo_Scalar.DiscardUnknown(m)
}

var xxx_messageInfo_Scalar proto.InternalMessageInfo

func (m *Scalar) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type JubJubScalar struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JubJubScalar) Reset()         { *m = JubJubScalar{} }
func (m *JubJubScalar) String() string { return proto.CompactTextString(m) }
func (*JubJubScalar) ProtoMessage()    {}
func (*JubJubScalar) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{1}
}
func (m *JubJubScalar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JubJubScalar.Unmarshal(m, b)
}
func (m *JubJubScalar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JubJubScalar.Marshal(b, m, deterministic)
}
func (m *JubJubScalar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JubJubScalar.Merge(m, src)
}
func (m *JubJubScalar) XXX_Size() int {
	return xxx_messageInfo_JubJubScalar.Size(m)
}
func (m *JubJubScalar) XXX_DiscardUnknown() {
	xxx_messageInfo_JubJubScalar.DiscardUnknown(m)
}

var xxx_messageInfo_JubJubScalar proto.InternalMessageInfo

func (m *JubJubScalar) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CompressedPoint struct {
	Y                    []byte   `protobuf:"bytes,1,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompressedPoint) Reset()         { *m = CompressedPoint{} }
func (m *CompressedPoint) String() string { return proto.CompactTextString(m) }
func (*CompressedPoint) ProtoMessage()    {}
func (*CompressedPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{2}
}
func (m *CompressedPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompressedPoint.Unmarshal(m, b)
}
func (m *CompressedPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompressedPoint.Marshal(b, m, deterministic)
}
func (m *CompressedPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompressedPoint.Merge(m, src)
}
func (m *CompressedPoint) XXX_Size() int {
	return xxx_messageInfo_CompressedPoint.Size(m)
}
func (m *CompressedPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_CompressedPoint.DiscardUnknown(m)
}

var xxx_messageInfo_CompressedPoint proto.InternalMessageInfo

func (m *CompressedPoint) GetY() []byte {
	if m != nil {
		return m.Y
	}
	return nil
}

type Nonce struct {
	Bs                   []byte   `protobuf:"bytes,1,opt,name=bs,proto3" json:"bs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nonce) Reset()         { *m = Nonce{} }
func (m *Nonce) String() string { return proto.CompactTextString(m) }
func (*Nonce) ProtoMessage()    {}
func (*Nonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_04234ff7fdd53e6e, []int{3}
}
func (m *Nonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nonce.Unmarshal(m, b)
}
func (m *Nonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nonce.Marshal(b, m, deterministic)
}
func (m *Nonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nonce.Merge(m, src)
}
func (m *Nonce) XXX_Size() int {
	return xxx_messageInfo_Nonce.Size(m)
}
func (m *Nonce) XXX_DiscardUnknown() {
	xxx_messageInfo_Nonce.DiscardUnknown(m)
}

var xxx_messageInfo_Nonce proto.InternalMessageInfo

func (m *Nonce) GetBs() []byte {
	if m != nil {
		return m.Bs
	}
	return nil
}

func init() {
	proto.RegisterType((*Scalar)(nil), "rusk.Scalar")
	proto.RegisterType((*JubJubScalar)(nil), "rusk.JubJubScalar")
	proto.RegisterType((*CompressedPoint)(nil), "rusk.CompressedPoint")
	proto.RegisterType((*Nonce)(nil), "rusk.Nonce")
}

func init() { proto.RegisterFile("field.proto", fileDescriptor_04234ff7fdd53e6e) }

var fileDescriptor_04234ff7fdd53e6e = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0xcb, 0x4c, 0xcd,
	0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x2a, 0x2d, 0xce, 0x56, 0x92, 0xe1,
	0x62, 0x0b, 0x4e, 0x4e, 0xcc, 0x49, 0x2c, 0x12, 0x12, 0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x95, 0x94, 0xb8, 0x78, 0xbc, 0x4a, 0x93, 0xbc,
	0x4a, 0x93, 0xf0, 0xa8, 0x91, 0xe7, 0xe2, 0x77, 0xce, 0xcf, 0x2d, 0x28, 0x4a, 0x2d, 0x2e, 0x4e,
	0x4d, 0x09, 0xc8, 0xcf, 0xcc, 0x2b, 0x11, 0xe2, 0xe1, 0x62, 0xac, 0x84, 0xaa, 0x61, 0xac, 0x54,
	0x12, 0xe7, 0x62, 0xf5, 0xcb, 0xcf, 0x4b, 0x4e, 0x15, 0xe2, 0xe3, 0x62, 0x4a, 0x2a, 0x86, 0x8a,
	0x33, 0x25, 0x15, 0x3b, 0x69, 0x45, 0x69, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7,
	0xe7, 0xea, 0xa7, 0x94, 0x16, 0x67, 0xeb, 0x82, 0x9d, 0x96, 0x54, 0x9a, 0xa6, 0x9f, 0x58, 0x5a,
	0x92, 0x9f, 0x9e, 0x9a, 0xa7, 0x9f, 0x9e, 0xaf, 0x0f, 0x72, 0x67, 0x12, 0x1b, 0x58, 0xc6, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xe4, 0x20, 0xcb, 0xc3, 0x00, 0x00, 0x00,
}
