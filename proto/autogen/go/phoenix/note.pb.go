// Code generated by protoc-gen-go. DO NOT EDIT.
// source: note.proto

package phoenix

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoteType int32

const (
	NoteType_TRANSPARENT NoteType = 0
	NoteType_OBFUSCATED  NoteType = 1
)

var NoteType_name = map[int32]string{
	0: "TRANSPARENT",
	1: "OBFUSCATED",
}

var NoteType_value = map[string]int32{
	"TRANSPARENT": 0,
	"OBFUSCATED":  1,
}

func (x NoteType) String() string {
	return proto.EnumName(NoteType_name, int32(x))
}

func (NoteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{0}
}

type InputOutput int32

const (
	InputOutput_INPUT  InputOutput = 0
	InputOutput_OUTPUT InputOutput = 1
)

var InputOutput_name = map[int32]string{
	0: "INPUT",
	1: "OUTPUT",
}

var InputOutput_value = map[string]int32{
	"INPUT":  0,
	"OUTPUT": 1,
}

func (x InputOutput) String() string {
	return proto.EnumName(InputOutput_name, int32(x))
}

func (InputOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{1}
}

type Idx struct {
	Pos                  uint64   `protobuf:"varint,1,opt,name=pos,proto3" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Idx) Reset()         { *m = Idx{} }
func (m *Idx) String() string { return proto.CompactTextString(m) }
func (*Idx) ProtoMessage()    {}
func (*Idx) Descriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{0}
}

func (m *Idx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Idx.Unmarshal(m, b)
}
func (m *Idx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Idx.Marshal(b, m, deterministic)
}
func (m *Idx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Idx.Merge(m, src)
}
func (m *Idx) XXX_Size() int {
	return xxx_messageInfo_Idx.Size(m)
}
func (m *Idx) XXX_DiscardUnknown() {
	xxx_messageInfo_Idx.DiscardUnknown(m)
}

var xxx_messageInfo_Idx proto.InternalMessageInfo

func (m *Idx) GetPos() uint64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

type Nullifier struct {
	H                    *Scalar  `protobuf:"bytes,1,opt,name=h,proto3" json:"h,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nullifier) Reset()         { *m = Nullifier{} }
func (m *Nullifier) String() string { return proto.CompactTextString(m) }
func (*Nullifier) ProtoMessage()    {}
func (*Nullifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{1}
}

func (m *Nullifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nullifier.Unmarshal(m, b)
}
func (m *Nullifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nullifier.Marshal(b, m, deterministic)
}
func (m *Nullifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nullifier.Merge(m, src)
}
func (m *Nullifier) XXX_Size() int {
	return xxx_messageInfo_Nullifier.Size(m)
}
func (m *Nullifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Nullifier.DiscardUnknown(m)
}

var xxx_messageInfo_Nullifier proto.InternalMessageInfo

func (m *Nullifier) GetH() *Scalar {
	if m != nil {
		return m.H
	}
	return nil
}

type Note struct {
	NoteType                NoteType         `protobuf:"varint,1,opt,name=note_type,json=noteType,proto3,enum=phoenix.NoteType" json:"note_type,omitempty"`
	Pos                     *Idx             `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Io                      InputOutput      `protobuf:"varint,3,opt,name=io,proto3,enum=phoenix.InputOutput" json:"io,omitempty"`
	Nonce                   *Nonce           `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	RG                      *CompressedPoint `protobuf:"bytes,5,opt,name=r_g,json=rG,proto3" json:"r_g,omitempty"`
	PkR                     *CompressedPoint `protobuf:"bytes,6,opt,name=pk_r,json=pkR,proto3" json:"pk_r,omitempty"`
	Commitment              *CompressedPoint `protobuf:"bytes,7,opt,name=commitment,proto3" json:"commitment,omitempty"`
	EncryptedBlindingFactor []byte           `protobuf:"bytes,8,opt,name=encrypted_blinding_factor,json=encryptedBlindingFactor,proto3" json:"encrypted_blinding_factor,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*Note_TransparentValue
	//	*Note_EncryptedValue
	Value                isNote_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{2}
}

func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (m *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(m, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetNoteType() NoteType {
	if m != nil {
		return m.NoteType
	}
	return NoteType_TRANSPARENT
}

func (m *Note) GetPos() *Idx {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *Note) GetIo() InputOutput {
	if m != nil {
		return m.Io
	}
	return InputOutput_INPUT
}

func (m *Note) GetNonce() *Nonce {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Note) GetRG() *CompressedPoint {
	if m != nil {
		return m.RG
	}
	return nil
}

func (m *Note) GetPkR() *CompressedPoint {
	if m != nil {
		return m.PkR
	}
	return nil
}

func (m *Note) GetCommitment() *CompressedPoint {
	if m != nil {
		return m.Commitment
	}
	return nil
}

func (m *Note) GetEncryptedBlindingFactor() []byte {
	if m != nil {
		return m.EncryptedBlindingFactor
	}
	return nil
}

type isNote_Value interface {
	isNote_Value()
}

type Note_TransparentValue struct {
	TransparentValue uint64 `protobuf:"varint,9,opt,name=transparent_value,json=transparentValue,proto3,oneof"`
}

type Note_EncryptedValue struct {
	EncryptedValue []byte `protobuf:"bytes,10,opt,name=encrypted_value,json=encryptedValue,proto3,oneof"`
}

func (*Note_TransparentValue) isNote_Value() {}

func (*Note_EncryptedValue) isNote_Value() {}

func (m *Note) GetValue() isNote_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Note) GetTransparentValue() uint64 {
	if x, ok := m.GetValue().(*Note_TransparentValue); ok {
		return x.TransparentValue
	}
	return 0
}

func (m *Note) GetEncryptedValue() []byte {
	if x, ok := m.GetValue().(*Note_EncryptedValue); ok {
		return x.EncryptedValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Note) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Note_TransparentValue)(nil),
		(*Note_EncryptedValue)(nil),
	}
}

type DecryptedNote struct {
	NoteType                NoteType         `protobuf:"varint,1,opt,name=note_type,json=noteType,proto3,enum=phoenix.NoteType" json:"note_type,omitempty"`
	Pos                     *Idx             `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Value                   uint64           `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Io                      InputOutput      `protobuf:"varint,4,opt,name=io,proto3,enum=phoenix.InputOutput" json:"io,omitempty"`
	Nonce                   *Nonce           `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	RG                      *CompressedPoint `protobuf:"bytes,6,opt,name=r_g,json=rG,proto3" json:"r_g,omitempty"`
	PkR                     *CompressedPoint `protobuf:"bytes,7,opt,name=pk_r,json=pkR,proto3" json:"pk_r,omitempty"`
	Commitment              *CompressedPoint `protobuf:"bytes,8,opt,name=commitment,proto3" json:"commitment,omitempty"`
	BlindingFactor          *Scalar          `protobuf:"bytes,9,opt,name=blinding_factor,json=blindingFactor,proto3" json:"blinding_factor,omitempty"`
	EncryptedBlindingFactor []byte           `protobuf:"bytes,10,opt,name=encrypted_blinding_factor,json=encryptedBlindingFactor,proto3" json:"encrypted_blinding_factor,omitempty"`
	// Types that are valid to be assigned to RawValue:
	//	*DecryptedNote_TransparentValue
	//	*DecryptedNote_EncryptedValue
	RawValue             isDecryptedNote_RawValue `protobuf_oneof:"rawValue"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DecryptedNote) Reset()         { *m = DecryptedNote{} }
func (m *DecryptedNote) String() string { return proto.CompactTextString(m) }
func (*DecryptedNote) ProtoMessage()    {}
func (*DecryptedNote) Descriptor() ([]byte, []int) {
	return fileDescriptor_640dafe07df50d4e, []int{3}
}

func (m *DecryptedNote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptedNote.Unmarshal(m, b)
}
func (m *DecryptedNote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptedNote.Marshal(b, m, deterministic)
}
func (m *DecryptedNote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptedNote.Merge(m, src)
}
func (m *DecryptedNote) XXX_Size() int {
	return xxx_messageInfo_DecryptedNote.Size(m)
}
func (m *DecryptedNote) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptedNote.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptedNote proto.InternalMessageInfo

func (m *DecryptedNote) GetNoteType() NoteType {
	if m != nil {
		return m.NoteType
	}
	return NoteType_TRANSPARENT
}

func (m *DecryptedNote) GetPos() *Idx {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *DecryptedNote) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DecryptedNote) GetIo() InputOutput {
	if m != nil {
		return m.Io
	}
	return InputOutput_INPUT
}

func (m *DecryptedNote) GetNonce() *Nonce {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *DecryptedNote) GetRG() *CompressedPoint {
	if m != nil {
		return m.RG
	}
	return nil
}

func (m *DecryptedNote) GetPkR() *CompressedPoint {
	if m != nil {
		return m.PkR
	}
	return nil
}

func (m *DecryptedNote) GetCommitment() *CompressedPoint {
	if m != nil {
		return m.Commitment
	}
	return nil
}

func (m *DecryptedNote) GetBlindingFactor() *Scalar {
	if m != nil {
		return m.BlindingFactor
	}
	return nil
}

func (m *DecryptedNote) GetEncryptedBlindingFactor() []byte {
	if m != nil {
		return m.EncryptedBlindingFactor
	}
	return nil
}

type isDecryptedNote_RawValue interface {
	isDecryptedNote_RawValue()
}

type DecryptedNote_TransparentValue struct {
	TransparentValue uint64 `protobuf:"varint,11,opt,name=transparent_value,json=transparentValue,proto3,oneof"`
}

type DecryptedNote_EncryptedValue struct {
	EncryptedValue []byte `protobuf:"bytes,12,opt,name=encrypted_value,json=encryptedValue,proto3,oneof"`
}

func (*DecryptedNote_TransparentValue) isDecryptedNote_RawValue() {}

func (*DecryptedNote_EncryptedValue) isDecryptedNote_RawValue() {}

func (m *DecryptedNote) GetRawValue() isDecryptedNote_RawValue {
	if m != nil {
		return m.RawValue
	}
	return nil
}

func (m *DecryptedNote) GetTransparentValue() uint64 {
	if x, ok := m.GetRawValue().(*DecryptedNote_TransparentValue); ok {
		return x.TransparentValue
	}
	return 0
}

func (m *DecryptedNote) GetEncryptedValue() []byte {
	if x, ok := m.GetRawValue().(*DecryptedNote_EncryptedValue); ok {
		return x.EncryptedValue
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DecryptedNote) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DecryptedNote_TransparentValue)(nil),
		(*DecryptedNote_EncryptedValue)(nil),
	}
}

func init() {
	proto.RegisterEnum("phoenix.NoteType", NoteType_name, NoteType_value)
	proto.RegisterEnum("phoenix.InputOutput", InputOutput_name, InputOutput_value)
	proto.RegisterType((*Idx)(nil), "phoenix.Idx")
	proto.RegisterType((*Nullifier)(nil), "phoenix.Nullifier")
	proto.RegisterType((*Note)(nil), "phoenix.Note")
	proto.RegisterType((*DecryptedNote)(nil), "phoenix.DecryptedNote")
}

func init() {
	proto.RegisterFile("note.proto", fileDescriptor_640dafe07df50d4e)
}

var fileDescriptor_640dafe07df50d4e = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcd, 0x6e, 0xda, 0x4c,
	0x14, 0x86, 0x31, 0x36, 0x7f, 0x07, 0x3e, 0x43, 0x46, 0x91, 0xe2, 0xaf, 0x52, 0xab, 0x08, 0xb1,
	0x48, 0x88, 0xca, 0x22, 0xdd, 0x44, 0xdd, 0x41, 0x7e, 0x1a, 0x36, 0x06, 0x0d, 0xa6, 0x5b, 0xcb,
	0xd8, 0x43, 0x18, 0xc5, 0xcc, 0x8c, 0x86, 0x71, 0x0b, 0x57, 0xd5, 0x8b, 0xe9, 0x0d, 0x55, 0x1e,
	0xbb, 0x0e, 0xad, 0xda, 0x26, 0x54, 0xea, 0xee, 0xc0, 0xfb, 0x70, 0x5e, 0xa4, 0xe7, 0xd8, 0x00,
	0x8c, 0x2b, 0x32, 0x10, 0x92, 0x2b, 0x8e, 0x6a, 0x62, 0xc5, 0x09, 0xa3, 0xdb, 0x57, 0xcd, 0x25,
	0x25, 0x71, 0x94, 0x7d, 0xdb, 0x3d, 0x01, 0x73, 0x1c, 0x6d, 0x51, 0x07, 0x4c, 0xc1, 0x37, 0x8e,
	0x71, 0x6a, 0x9c, 0x59, 0x38, 0x1d, 0xbb, 0x7d, 0x68, 0xb8, 0x49, 0x1c, 0xd3, 0x25, 0x25, 0x12,
	0xbd, 0x06, 0x63, 0xa5, 0xc3, 0xe6, 0x65, 0x7b, 0x90, 0xef, 0x19, 0xcc, 0xc2, 0x20, 0x0e, 0x24,
	0x36, 0x56, 0xdd, 0xaf, 0x26, 0x58, 0x2e, 0x57, 0x04, 0x0d, 0xa0, 0x91, 0x36, 0xfa, 0x6a, 0x27,
	0x88, 0xe6, 0xed, 0xcb, 0xa3, 0x82, 0x4f, 0x09, 0x6f, 0x27, 0x08, 0xae, 0xb3, 0x7c, 0x42, 0x6f,
	0xb2, 0xda, 0xb2, 0xde, 0xdc, 0x2a, 0xc8, 0x71, 0xb4, 0xd5, 0x7f, 0x02, 0xf5, 0xa0, 0x4c, 0xb9,
	0x63, 0xea, 0x45, 0xc7, 0x4f, 0x31, 0x13, 0x89, 0x9a, 0x24, 0x4a, 0x24, 0x0a, 0x97, 0x29, 0x47,
	0x3d, 0xa8, 0x30, 0xce, 0x42, 0xe2, 0x58, 0x7a, 0x8f, 0xbd, 0xd7, 0xc8, 0x42, 0x82, 0xb3, 0x10,
	0x9d, 0x83, 0x29, 0xfd, 0x07, 0xa7, 0xa2, 0x19, 0xa7, 0x60, 0xae, 0xf9, 0x5a, 0x48, 0xb2, 0xd9,
	0x90, 0x68, 0xca, 0x29, 0x53, 0xb8, 0x2c, 0x3f, 0xa0, 0x0b, 0xb0, 0xc4, 0xa3, 0x2f, 0x9d, 0xea,
	0x33, 0xac, 0x29, 0x1e, 0x31, 0xba, 0x02, 0x08, 0xf9, 0x7a, 0x4d, 0xd5, 0x9a, 0x30, 0xe5, 0xd4,
	0x9e, 0xf9, 0xc9, 0x1e, 0x8b, 0xde, 0xc3, 0xff, 0x84, 0x85, 0x72, 0x27, 0x14, 0x89, 0xfc, 0x45,
	0x4c, 0x59, 0x44, 0xd9, 0x83, 0xbf, 0x0c, 0x42, 0xc5, 0xa5, 0x53, 0x3f, 0x35, 0xce, 0x5a, 0xf8,
	0xa4, 0x00, 0x46, 0x79, 0x7e, 0xa7, 0x63, 0xf4, 0x16, 0x8e, 0x94, 0x0c, 0xd8, 0x46, 0x04, 0x92,
	0x30, 0xe5, 0x7f, 0x0a, 0xe2, 0x84, 0x38, 0x8d, 0x54, 0xdf, 0x7d, 0x09, 0x77, 0xf6, 0xa2, 0x8f,
	0x69, 0x82, 0xce, 0xa1, 0xfd, 0x54, 0x95, 0xc1, 0x90, 0x16, 0xdc, 0x97, 0xb0, 0x5d, 0x04, 0x1a,
	0x1d, 0xd5, 0xa0, 0xa2, 0x81, 0xee, 0x17, 0x0b, 0xfe, 0xbb, 0x21, 0x79, 0xf6, 0x4f, 0xf4, 0x1e,
	0xe7, 0x55, 0xda, 0xb0, 0x85, 0xb3, 0x0f, 0xb9, 0x74, 0xeb, 0xa5, 0xd2, 0x2b, 0x2f, 0x90, 0x5e,
	0x3d, 0x40, 0x7a, 0xed, 0x70, 0xe9, 0xf5, 0x03, 0xa4, 0x5f, 0x41, 0xfb, 0x67, 0xd5, 0x8d, 0x5f,
	0x3f, 0x58, 0xf6, 0xe2, 0x47, 0xe5, 0x7f, 0x3c, 0x17, 0xf8, 0x8b, 0x73, 0x69, 0x1e, 0x72, 0x2e,
	0xad, 0xdf, 0x9c, 0x0b, 0x40, 0x5d, 0x06, 0x9f, 0xf5, 0xdc, 0xbf, 0x80, 0xfa, 0xf7, 0x2b, 0x40,
	0x6d, 0x68, 0x7a, 0x78, 0xe8, 0xce, 0xa6, 0x43, 0x7c, 0xeb, 0x7a, 0x9d, 0x12, 0xb2, 0x01, 0x26,
	0xa3, 0xbb, 0xf9, 0xec, 0x7a, 0xe8, 0xdd, 0xde, 0x74, 0x8c, 0x7e, 0x0f, 0x9a, 0x7b, 0x4e, 0x51,
	0x03, 0x2a, 0x63, 0x77, 0x3a, 0x4f, 0x49, 0x80, 0xea, 0x64, 0xee, 0xa5, 0xb3, 0xb1, 0xa8, 0xea,
	0xd7, 0xd4, 0xbb, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xda, 0x40, 0x42, 0xeb, 0xca, 0x04, 0x00,
	0x00,
}
